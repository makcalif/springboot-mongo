 k get pod my-release-mongodb-5789457896-szhv8  -o yaml --export > rev-helm.yaml

helm install --name my-release   --set mongodbRootPassword=example,mongodbUsername=oauth-user,mongodbPassword=password,mongodbDatabase=oauth-db  stable/mongodb

helm delete my-release

helm del --purge my-release;

for i in 0 1 2; do kubectl get pod zk-$i --template {{.spec.n odeName}}; echo ""; done

kubectl run -i --tty --image busybox:1.28 dns-test -restart=Never --rm
nslookup web-0.nginx
Server: 10.0.0.10 Address 1: 10.0.0.10 kube-dns.kube-system.svc.cluster.local

kubectl run curl --image=radial/busyboxplus:curl -i --tty

 k delete all -l run=curl

 kubectl attach curl-775f9567b5-g9kph -c curl -i -t

 To deploy a new version use kubectl set image deployment/spring-boot-deployment spring-boot-app=your-new-image or simply edit the configuration with kubectl edit deployment spring-boot-deployment . With the second command you can update the image and the number of pods at the same time. If you want just to scale the app run kubectl scale deployment spring-boot-deployment --replicas=10 or create an autoscaling configuration.

 -- run simple bash commands for debugging
 k run -it --rm --restart=Never alpine --image=alpine sh