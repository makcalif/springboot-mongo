mongo login as admin

 k exec -it  mongo-5f5db6859c-ddbdn  -- /bin/bash

cd /usr/bin
mongo login -u root -p example
================================
 k get pod my-release-mongodb-5789457896-szhv8  -o yaml --export > rev-helm.yaml

helm install --name my-release   --set mongodbRootPassword=example,mongodbUsername=oauth-user,mongodbPassword=password,mongodbDatabase=oauth-db  stable/mongodb

helm delete my-release

helm del --purge my-release;

for i in 0 1 2; do kubectl get pod zk-$i --template {{.spec.n odeName}}; echo ""; done

kubectl run -i --tty --image busybox:1.28 dns-test -restart=Never --rm
nslookup web-0.nginx
Server: 10.0.0.10 Address 1: 10.0.0.10 kube-dns.kube-system.svc.cluster.local

kubectl run curl --image=radial/busyboxplus:curl -i --tty

 k delete all -l run=curl

 kubectl attach curl-775f9567b5-g9kph -c curl -i -t

 To deploy a new version use kubectl set image deployment/spring-boot-deployment spring-boot-app=your-new-image or simply edit the configuration with kubectl edit deployment spring-boot-deployment . With the second command you can update the image and the number of pods at the same time. If you want just to scale the app run kubectl scale deployment spring-boot-deployment --replicas=10 or create an autoscaling configuration.

 -- run simple bash commands for debugging
 k run -it --rm --restart=Never alpine --image=alpine sh

 k run -it --rm --image=mikesplain/telnet sh

 kubectl port-forward <mongo pod name>  27017  (then you can do a telnet to verify if mongo is up or not)

-- get auth token
curl -I  --user account-service:1234  -H "Content-Type: application/x-www-form-urlencoded" -d "grant_type=client-credentials&username=randomuser&password=1234" -X POST http://auth-service/uaa/oauth/token

 k exec -it curl-775f9567b5-pnjhf -- curl  --user "account-service:1234"  -H "Content-Type: application/x-www-form-urlencoded" -d "grant_type=client_credentials&username=randomuser&password=1234" -X POST  http://10.96.101.34:8011/uaa/oauth/token

-- win powershell
curl -v -X  POST -H 'Content-Type: application/x-www-form-urlencoded'  --user account-service:1234 -d 'grant_type=client-credentials&username=randomuser&password=1234' http://127.0.0.1/uaa/oauth/token

--- service end point
 k get ep auth-service
NAME           ENDPOINTS        AGE
auth-service   10.1.1.67:8011   53m

-------------- curl a nodeport ----------------
nodeport-for-persons     NodePort       10.102.96.25     <none>        44444:30492/TCP   69d
k exec -it curl-775f9567b5-pnjhf -- curl  http://10.102.96.25:44444/persons
[]

---------------------- check if dns is running
kubectl get services kube-dns --namespace=kube-system

--------------------------------------
k config current-context
gke_sparkarabic-251004_us-central1-a_sparkarabic

kubectl config set-context mongo --namespace=mongo     --cluster=gke_sparkarabic-251004_us-central1-a_sparkarabic --user=gke_sparkarabic-251004_us-central1-a_sparkarabic
kubectl config set-context default --namespace=default --cluster=gke_sparkarabic-251004_us-central1-a_sparkarabic --user=gke_sparkarabic-251004_us-central1-a_sparkarabic

k config use-context mongo (you can switch to default also)
